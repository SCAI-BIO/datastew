# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Update package version
      run: |
        VERSION=${{ github.event.release.tag_name }}
        sed -i 's/__version__ = ".*"/__version__ = "'${VERSION}'"/' datastew/_version.py
        sed -i "s/^version = \".*\"/version = \"${VERSION}\"/" pyproject.toml
        
    - name: Install dependencies
      run: |
        poetry install

    - name: Build package
      run: |
        poetry build

    - name: Publish package
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        poetry publish --username __token__ --password $POETRY_PYPI_TOKEN_PYPI
