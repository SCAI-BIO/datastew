name: tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    permissions:
      contents: read
      pull-requests: write

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    services:
      postgres:
        image: ankane/pgvector # pgvector-enabled PostgreSQL
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready -U testuser -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      TEST_POSTGRES_URI: postgresql://testuser:testpass@localhost:5432/testdb

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure Poetry environment
        run: |
          poetry config virtualenvs.create true
          poetry env use python${{ matrix.python-version }}

      - name: Install dependencies
        run: poetry install

      - name: Wait for PostgreSQL to become ready
        run: |
          until pg_isready -h localhost -U testuser -d testdb; do sleep 1; done

      - name: Run tests
        run: poetry run pytest
